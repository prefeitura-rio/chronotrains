---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chronotrains
  namespace: chronotrains
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  selector:
    matchLabels:
      app: chronotrains
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: chronotrains
    spec:
      containers:
        - name: chronotrains
          image: gcr.io/PROJECT_ID/IMAGE_NAME:TAG
          ports:
            - containerPort: 3000
          envFrom:
            - secretRef:
                name: chronotrains-envs
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
      restartPolicy: Always

---
# Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: chronotrains
  name: chronotrains
  namespace: chronotrains
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 3000
  selector:
    app: chronotrains

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chronotrains-ingress
  namespace: chronotrains
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - transporte.dados.rio
      secretName: chronotrains-tls
  rules:
    - host: transporte.dados.rio
      http:
        paths:
          - path: /mapa-subsidio
            pathType: Prefix
            backend:
              service:
                name: chronotrains
                port:
                  number: 80
