generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Station {
  id                 Int                      @id
  name               String
  latitudeE7         Int                      @map("latitude_e7")
  longitudeE7        Int                      @map("longitude_e7")
  directTimesFetched Boolean                  @map("direct_times_fetched")
  geom               Unsupported("geometry")?
  timesDeparting     DirectTime[]             @relation("from_station")
  timesArriving      DirectTime[]             @relation("to_station")
  isochrones         Isochrone[]

  @@index([geom], map: "geom_idx", type: Gist)
  @@map("stations")
}

model DirectTime {
  toStationId   Int               @map("to_station_id")
  fromStationId Int               @map("from_station_id")
  distanceKm    Int               @map("distance_km")
  duration      Int
  source        DirectTimeSource?
  fromStation   Station           @relation("from_station", fields: [fromStationId], references: [id])
  toStation     Station           @relation("to_station", fields: [toStationId], references: [id])

  @@id([toStationId, fromStationId])
  @@map("direct_times")
}

model Isochrone {
  stationId Int     @map("station_id")
  duration  Int
  geometry  Json
  station   Station @relation(fields: [stationId], references: [id])

  @@id([stationId, duration])
  @@map("isochrones")
}

model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

enum DirectTimeSource {
  bahnguru
  computed
}
